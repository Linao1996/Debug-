4.12
@ windows下文件到linux打开，中文出现乱码，原因是：windows下默认文件编码格式为GBK，而linux为UTF-8。
解决方案：
1、windows下用记事本打开，手动另存为utf-8格式
2、linux下使用iconv命令：
iconv -f GBK -t UTF-8 CrashCode.java CrashCode2.java

相关知识：
1、ISO 8859-1，正式编号为ISO/IEC 8859-1:1998，又称Latin-1或“西欧语言”，
是国际标准化组织内ISO/IEC 8859的第一个8位字符集。它以ASCII为基础，在空置的0xA0-0xFF的范围内，
加入96个字母及符号，藉以供使用附加符号的拉丁字母语言使用。
2、Linux默认unicode编码方式为utf-8，Windows默认unicode编码方式为utf-16
===============================================================
4.13
@什么是BOM？BOM = Byte Order MarkBOM是Unicode规范中推荐的标记字节顺序的方法。比如说对于UTF-16，如果接收者收到的BOM是FEFF，
表明这个字节流是Big-Endian的；如果收到FFFE，就表明这个字节流是Little-Endian的。UTF-8不需要BOM来表明字节顺序，
但可以用BOM来表明“我是UTF-8编码”。BOM的UTF-8编码是EF BB BF（用UltraEdit打开文本、切换到16进制可以看到）。
所以如果接收者收到以EF BB BF开头的字节流，就知道这是UTF-8编码了。
所有的BOM在C/C++/Java中都被处理为"\uFEFF"，参考：http://www.fileformat.info/info/unicode/char/feff/index.htm

intellij中对于utf-8 +bom文件识别失败，解决方案：
先转化为utf-16，在转会utf-8即可
==================================================================
4.14
@debug时printf是万能的
@windows中sleep单位为毫秒，头文件为windows.h
linux 下sleep单位为秒，头文件为unistd.h，若想更为精细，应使用usleep，单位为微秒（microsecond，1e6 second）
@指定进程运行cpu，使用sched_setaffinity()方法，必须加入#define _GNU_SOURCE 和 #include<sched.h>
@ 编译用到math.h 文件的c时，需要指定-lm，（gcc a.c -o a.o -lm )原因：
The functions in stdlib.h and stdio.h have implementations in libc.so (or libc.a for static linking), 
which is linked into your executable by default (as if -lc were specified). 
GCC can be instructed to avoid this automatic link with the -nostdlib or -nodefaultlibs options.

The math functions in math.h have implementations in libm.so (or libm.a for static linking),
and libm is not linked in by default. There are historical reasons for this libm/libc split, 
none of them very convincing.
